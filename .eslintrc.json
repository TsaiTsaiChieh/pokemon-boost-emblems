{
  "env": {
    "browser": true,
    "es2021": true,
    "node": true
  },
  "extends": [
    "plugin:react/recommended",
    "google",
    "plugin:import/errors"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "ecmaFeatures": {
      "jsx": true
    },
    "ecmaVersion": 12,
    "sourceType": "module"
  },
  "plugins": [
    "react",
    "@typescript-eslint",
    "import"
  ],
  "settings": {
    "import/resolver": {
      "node": {
        "paths": [
          "src"
        ],
        "extensions": [
          ".js",
          ".ts",
          ".d.ts",
          ".tsx"
        ]
      }
    }
  },
  "rules": {
    "semi": [
      "error",
      "never"
    ],
    "@typescript-eslint/member-delimiter-style": [
      "error",
      {
        "multiline": {
          "delimiter": "none",
          "requireLast": true
        },
        "singleline": {
          "delimiter": "semi",
          "requireLast": false
        }
      }
    ],
    "indent": [
      "off",
      2
    ],
    "linebreak-style": 0,
    "react/react-in-jsx-scope": "off",
    "react/prop-types": 0,
    "@typescript-eslint/no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "_",
        "argsIgnorePattern": "^_"
      }
    ],
    "no-unused-vars": [
      "error",
      {
        "varsIgnorePattern": "_",
        "argsIgnorePattern": "^_"
      }
    ],
    "require-jsdoc": [
      "error",
      {
        "require": {
          "FunctionDeclaration": false,
          "MethodDefinition": false,
          "ClassDeclaration": false,
          "ArrowFunctionExpression": false,
          "FunctionExpression": false
        }
      }
    ],
    "eqeqeq": [
      "error",
      "always"
    ],
    "jsx-quotes": [
      "error",
      "prefer-single"
    ],
    "import/order": [
      "error",
      {
        "groups": [
          "builtin",
          "external",
          "internal"
        ],
        "pathGroups": [
          {
            "pattern": "react",
            "group": "external",
            "position": "before"
          }
        ],
        "pathGroupsExcludedImportTypes": [
          "react"
        ],
        "newlines-between": "always",
        "alphabetize": {
          "order": "asc",
          "caseInsensitive": true
        }
      }
    ],
    "camelcase": [
      "error",
      {
        "allow": []
      }
    ]
  }
}